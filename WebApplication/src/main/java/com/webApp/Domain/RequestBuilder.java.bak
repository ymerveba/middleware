package com.webApp.Domain;

import java.io.FileWriter;
import java.io.StringWriter;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.transform.stream.StreamResult;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

import com.webApp.DAO.Transaction;

public class RequestBuilder {

	@SuppressWarnings("restriction")
	public void getOffer(Transaction transaction) throws Exception {
		DefaultHttpClient httpClient = new DefaultHttpClient();
		DiscountRequestObject request=new DiscountRequestObject();
		request.setWebAppId("abc");
		request.setPassword("passw0rd");
		request.setUserID(transaction.getUser_id());
		request.setNumberOfTransactions(transaction.getNumberOfTransactions());
		request.setTotalValue(transaction.getTotal_amt());
		
		//RestTemplate restTemplate = new RestTemplate();
		 StringWriter writer = new StringWriter();
		   
			JAXBContext jaxbContext = JAXBContext.newInstance(DiscountRequestObject.class);
		    Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
		    jaxbMarshaller.marshal(request, writer);
		    jaxbMarshaller.marshal(request,new StreamResult(new FileWriter("C:\\Personal Projects\\employee.xml")));
		    try
		    {
		        //Define a postRequest request
		        HttpPost postRequest = new HttpPost("http://localhost:8080/MiddleWare/webApp/");
		         
		        //Set the API media type in http content-type header
		        postRequest.addHeader("content-type", "application/xml");
		         
		        //Set the request post body
		        StringEntity userEntity = new StringEntity(writer.getBuffer().toString());
		        postRequest.setEntity(userEntity);
		          
		        //Send the request; It will immediately return the response in HttpResponse object if any
		        HttpResponse response = httpClient.execute(postRequest);
		         
		        int statusCode = response.getStatusLine().getStatusCode();
		        if (statusCode != 200)
		        {
		            throw new RuntimeException("Failed with HTTP error code : " + statusCode);
		        }
		         
		        //Now pull back the response object
		        HttpEntity httpEntity = response.getEntity();
		        String apiOutput = EntityUtils.toString(httpEntity);
		         
		        //Lets see what we got from API
		        System.out.println(apiOutput); //<user id="10"><firstName>demo</firstName><lastName>user</lastName></user>
		         
		
		       // JAXBContext jaxbContext2 = JAXBContext.newInstance(User.class);
		        //Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
		        //DiscountResponseObject user = (User) jaxbUnmarshaller.unmarshal(new StringReader(apiOutput));
		         
		        //Verify the populated object
		       /* System.out.println(user.getId());
		        System.out.println(user.getFirstName());
		        System.out.println(user.getLastName());*/
		    }
		    finally
		    {
		        //Important: Close the connect
		        httpClient.getConnectionManager().shutdown();
		    }
		
       /* try{
        	restTemplate.get
        restTemplate.getForObject//("http://localhost:8080/MiddleWare/hello/yuvi");
        //System.out.println("Name:    " + page.getName());
         System.out.println(page.getName());
        }catch(Exception e){
        	System.out.println("Server not started");
        }*/
		
	}

}
